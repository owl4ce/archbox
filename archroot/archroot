#!/usr/bin/env bash
source /etc/archroot.conf

function checkdep {
    which $1 >/dev/null 2>&1 || err "$1 is not installed. Please install it first!"
}

function err {
    echo "$(tput bold)$(tput setaf 1)==> $@ $(tput sgr0)"
    exit 1
}

function msg {
    echo "$(tput bold)$(tput setaf 2)==> $@ $(tput sgr0)"
}

function msg_mnt {
    echo "$(tput bold)$(tput setaf 2)[$(tput sgr0) Mounted$(tput bold)$(tput setaf 2) ]$(tput sgr0) $@"
}

function msg_umnt {
    echo "$(tput bold)$(tput setaf 1)[$(tput sgr0) Unmounted$(tput bold)$(tput setaf 1) ]$(tput sgr0) $@"
}

function help_text {
cat << EOF
USAGE: archroot OPTIONS

OPTIONS:
  -c, --create URL      Creates a chroot environment.
  -m, --mount           Mount chroot API filesystems.
  -u, --unmount         Unmount chroot API filesystems.
  -r, --remount-run     Remount /run chroot API filesystems.
  -s, --status          Check mounted chroot API filesystems.
  -e, --enter           Enters chroot environment.
  -h, --help            Displays this help message.

Install Arch Linux inside chroot environment using same user environment
https://github.com/owl4ce/archroot
EOF
}

function asroot {
    [[ $EUID -ne 0 ]] && err "Run this as root!"
}

function copyresolv {
    $PRIV $INSTALL_PATH/copyresolv
}

function storeenv {
    echo "$DBUS_SESSION_BUS_ADDRESS" > /tmp/archroot_dbus_session_address
    echo "$XDG_RUNTIME_DIR" > /tmp/archroot_xdg_runtime_dir
}

function chk_apifs {
    if mount | grep "$CHROOT/dev" > /dev/null; then
        msg_mnt "$CHROOT/dev"
    else
        msg_umnt "$CHROOT/dev"
    fi
    if mount | grep "$CHROOT/home" > /dev/null; then
        msg_mnt "$CHROOT/home"
    else
        msg_umnt "$CHROOT/home"
    fi
    if mount | grep "$CHROOT/usr/lib/modules" > /dev/null; then
        msg_mnt "$CHROOT/lib/modules"
    else
        msg_umnt "$CHROOT/lib/modules"
    fi
    if mount | grep "$CHROOT/proc" > /dev/null; then
        msg_mnt "$CHROOT/proc"
    else
        msg_umnt "$CHROOT/proc"
    fi
    if mount | grep "$CHROOT/run" > /dev/null; then
        msg_mnt "$CHROOT/run"
    else
        msg_umnt "$CHROOT/run"
    fi
    if mount | grep "$CHROOT/sys" > /dev/null; then
        msg_mnt "$CHROOT/sys"
    else
        msg_umnt "$CHROOT/sys"
    fi
    if mount | grep "$CHROOT/tmp" > /dev/null; then
        msg_mnt "$CHROOT/tmp"
    else
        msg_umnt "$CHROOT/tmp"
    fi
    if mount | grep "$CHROOT/var/lib/dbus" > /dev/null; then
        msg_mnt "$CHROOT/var/lib/dbus"
    else
        msg_umnt "$CHROOT/var/lib/dbus"
    fi
}

function mnt_apifs {
    case $1 in
        root)
            mount -Rv /dev $CHROOT/dev
            mount --make-rslave $CHROOT/dev
            mount -Rv /home $CHROOT/home
            mount -Rv /lib/modules $CHROOT/lib/modules
            mount -vt proc /proc $CHROOT/proc
            mount -Rv /run $CHROOT/run
            mount -Rv /sys $CHROOT/sys
            mount --make-rslave $CHROOT/sys
            mount -Rv /tmp $CHROOT/tmp
            mount -Rv /var/lib/dbus $CHROOT/var/lib/dbus
        ;;
        user)
            $PRIV mount -Rv /dev $CHROOT/dev
            $PRIV mount --make-rslave $CHROOT/dev
            $PRIV mount -Rv /home $CHROOT/home
            $PRIV mount -Rv /lib/modules $CHROOT/lib/modules
            $PRIV mount -vt proc /proc $CHROOT/proc
            $PRIV mount -Rv /run $CHROOT/run
            $PRIV mount -Rv /sys $CHROOT/sys
            $PRIV mount --make-rslave $CHROOT/sys
            $PRIV mount -Rv /tmp $CHROOT/tmp
            $PRIV mount -Rv /var/lib/dbus $CHROOT/var/lib/dbus
        ;;
    esac
}

function umnt_apifs {
    $PRIV umount -Rv $CHROOT/dev
    $PRIV umount -Rv $CHROOT/home
    $PRIV umount -Rv $CHROOT/lib/modules
    $PRIV umount -Rv $CHROOT/proc
    $PRIV umount -Rv $CHROOT/run
    $PRIV umount -Rv $CHROOT/sys
    $PRIV umount -Rv $CHROOT/tmp
    $PRIV umount -Rv $CHROOT/var/lib/dbus
}

function redirx {
    checkdep xhost
    xhost +local: > /dev/null
}

case $1 in
    -c|--create)
        asroot
        [[ -z $2 ]] && err "Specify the URL of Arch Linux bootstrap tarball!"
        cd $INSTALL_PATH
        msg "Downloading Arch Linux tarball..."
        [[ ! -f ./archlinux.tar.gz ]] && checkdep wget && wget -q --show-progress -O archlinux.tar.gz $2 && \
        [[ -f ./archlinux.tar.gz ]] && msg "Arch Linux tarball downloaded"
        msg "Extracting the tarball..."
        rm -r ./root.x86_64 2> /dev/null
        tar xzf archlinux.tar.gz 2> /dev/null
        msg "Enabling internet connection in chroot environment..."
        cp /etc/resolv.conf $CHROOT/etc/resolv.conf
        msg "You will need to edit which mirror you want to use, uncomment needed mirrors and save it!"
        echo -n "Editor of your choice (e.g: nano): "
        read TEXT_EDITOR
        checkdep $TEXT_EDITOR
        $TEXT_EDITOR $CHROOT/etc/pacman.d/mirrorlist || exit 1
        msg "Disabling Pacman's CheckSpace..."
        checkdep sed
        sed -i 's_CheckSpace_#CheckSpace_' $CHROOT/etc/pacman.conf
        msg "Mounting chroot API filesystems..."
        mkdir -p $CHROOT/lib/modules
        mkdir -p $CHROOT/var/lib/dbus
        mnt_apifs root
        /usr/local/bin/archroot -s
        echo "$USER" > /tmp/archroot_localuser
        cp $INSTALL_PATH/archsetup $CHROOT/archsetup
        chroot $CHROOT /bin/bash -c "./archsetup"
        msg "Archroot installation was successful"
    ;;
    -m|--mount)
        if mount | grep -E "$CHROOT/dev|$CHROOT/home|$CHROOT/usr/lib/modules|$CHROOT/proc|$CHROOT/run|$CHROOT/sys|$CHROOT/tmp|$CHROOT/var/lib/dbus" > /dev/null; then
            chk_apifs
            msg "Chroot API filesystems: Already mounted"
        else
            msg "Mounting chroot API filesystems..."
            mnt_apifs user
            archroot -s
        fi
    ;;
    -u|--unmount)
        if mount | grep -E "$CHROOT/dev|$CHROOT/home|$CHROOT/usr/lib/modules|$CHROOT/proc|$CHROOT/run|$CHROOT/sys|$CHROOT/tmp|$CHROOT/var/lib/dbus" > /dev/null; then
            msg "Unmounting chroot API filesystems..."
            umnt_apifs
            archroot -s
            msg "If failed to unmount simply reboot host!"
        else
            chk_apifs
            err "Chroot API filesystems: Not mounted"
        fi
    ;;
    -r|--remount-run)
        if mount | grep "$CHROOT/run" > /dev/null; then
            msg "Remounting /run chroot API filesystems..."
            $PRIV umount -lv $CHROOT/run
            $PRIV mount -Rv /run $CHROOT/run
            msg "Checking /run chroot API filesystems..."
            if mount | grep "$CHROOT/run" > /dev/null; then
                msg_mnt "$CHROOT/run"
            else
                msg_umnt "$CHROOT/run"
            fi
            msg "Chroot API filesystems: /run remounted successfuly"
        else
            msg "Checking /run chroot API filesystems..."
            msg_umnt "$CHROOT/run"
            err "Chroot API filesystems: /run not mounted"
        fi
    ;;
    -s|--status)
        msg "Checking mounted chroot API filesystems..."
        chk_apifs
        if mount | grep -E "$CHROOT/dev|$CHROOT/home|$CHROOT/usr/lib/modules|$CHROOT/proc|$CHROOT/run|$CHROOT/sys|$CHROOT/tmp|$CHROOT/var/lib/dbus" > /dev/null; then
            msg "Chroot API filesystems: Mounted"
        else
            err "Chroot API filesystems: Unmounted"
        fi
    ;;
    -e|--enter)
        if mount | grep -E "$CHROOT/dev|$CHROOT/home|$CHROOT/usr/lib/modules|$CHROOT/proc|$CHROOT/run|$CHROOT/sys|$CHROOT/tmp|$CHROOT/var/lib/dbus" > /dev/null; then
            redirx
            storeenv
            $PRIV $INSTALL_PATH/copyresolv
            $PRIV $INSTALL_PATH/command enter
        else
            archroot -s
            msg "Please mount chroot API filesystems before entering chroot environment!"
        fi
	;;
    -h|--help)
        help_text
    ;;
    "")
        help_text
    ;;
    -*)
        err "Unknown option: $1"
    ;;
    *)
        if mount | grep -E "$CHROOT/dev|$CHROOT/home|$CHROOT/usr/lib/modules|$CHROOT/proc|$CHROOT/run|$CHROOT/sys|$CHROOT/tmp|$CHROOT/var/lib/dbus" > /dev/null; then
            redirx
            storeenv
            $PRIV $INSTALL_PATH/copyresolv
            COMMAND=$(echo $@ | tr ' ' '\ ')
            $PRIV $INSTALL_PATH/command $COMMAND
        else
            archroot -s
            msg "Please mount chroot API filesystems before using chroot environment command directly!"
        fi
    ;;
esac
